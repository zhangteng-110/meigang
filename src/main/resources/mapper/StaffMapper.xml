<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.beautifulharborbackstage.dao.mapper.StaffMapper" >
    <resultMap id="StaffReturnResultDTO" type="com.beautifulharborbackstage.pojo.dto.StaffReturnResultDTO" >
        <id column="staffId" property="staffId" jdbcType="BIGINT" />
        <result column="accountNumber" property="accountNumber" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="staffCode" property="staffCode" jdbcType="VARCHAR" />
        <result column="staffName" property="staffName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="startDate" property="startDate" jdbcType="DATE" />
        <result column="endDate" property="endDate" jdbcType="DATE" />
        <result column="staffSex" property="staffSex" javaType="com.beautifulharborbackstage.pojo.po.UserSexEnum"/>
        <result column="salary" property="salary" jdbcType="BIGINT" />
        <result column="staffPositionId" property="staffPositionId" jdbcType="BIGINT" />
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />
        <result column="roleId" property="roleId" jdbcType="BIGINT" />
        <result column="status" property="status" jdbcType="BIGINT" />
        <result column="storefrontId" property="storefrontId" jdbcType="BIGINT" />
        <result column="storefrontName" property="storefrontName" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="StaffDTO_List" >
        staffId , accountNumber, password , staffCode ,staffName,staffSex,phone,startDate,endDate,salary,status
    </sql>

    <select id="getStaffNumber" resultType="java.lang.Integer">
        SELECT
        count(staffId)
        FROM staff
    </select>

    <select id="login" resultMap="StaffReturnResultDTO"  parameterType="com.beautifulharborbackstage.pojo.dto.StaffDTO">
        SELECT
        <include refid="StaffDTO_List" />
        FROM staff
        where 1 = 1 and accountNumber = #{accountNumber} and password = #{password} and staffPositionId in ('1')
    </select>

    <select id="selectAllStaff" parameterType="com.beautifulharborbackstage.pojo.dto.UserDTO" resultMap="StaffReturnResultDTO">
        SELECT
        staffId , accountNumber, password , staffCode ,staffName,staffSex,phone,s.startDate,s.endDate,salary,s.status,r.roleName,s2.storefrontName
        FROM staff s left join role r on s.staffPositionId = r.roleId left join storefront s2 on s.storefrontId = s2.storefrontId
        <where>
            1 = 1
            <if test="staffName != null and staffName != ''">
                and s.staffName like CONCAT('%',#{staffName},'%')
            </if>
            and s.staffPositionId not in ('1','2','3')
        </where>
    </select>

    <select id="selectStaffById" parameterType="java.lang.Integer" resultMap="StaffReturnResultDTO">
        SELECT
        s.staffId , s.accountNumber, s.password , s.staffCode ,s.staffName,s.staffSex,s.phone,s.startDate,s.endDate,s.salary,s.status,r.roleId,r.roleName,t.storefrontName,t.storefrontId
        FROM staff s join role r on s.staffPositionId = r.roleId left join storefront t on s.storefrontId = t.storefrontId
        <where>
            1 = 1
            <if test="staffId != null">
                and s.staffId = #{staffId}
            </if>

        </where>
    </select>

    <delete id="deleteStaffById" parameterType="java.lang.Integer" >
        DELETE FROM staff
        <where>
            1=1
            <if test="staffId != null">
                and staffId = #{staffId}
            </if>
        </where>
    </delete>
    <insert id="staffRegister" parameterType="com.beautifulharborbackstage.pojo.dto.StaffDTO" >
        INSERT INTO
            staff
            (staffSex, phone, staffName, startDate, staffCode ,salary,staffPositionId,storefrontId)
        VALUES
            (#{staffSex},#{phone},#{staffName},#{startDate},#{staffCode},#{salary},#{staffPositionId},#{storefrontId})
    </insert>

    <update id="updateStaffDetail" parameterType="com.beautifulharborbackstage.pojo.dto.StaffDTO" >
        UPDATE
        staff
        SET
        <if test="staffName != null and staffName != ''">
            staffName = #{staffName},
        </if>
        <if test="staffSex != null">
            staffSex = #{staffSex},
        </if>
        <if test="staffCode != null">
            staffCode = #{staffCode},
        </if>
        <if test="phone != null">
            phone = #{phone},
        </if>
        <if test="salary != null">
            salary = #{salary},
        </if>
        <if test="staffPositionId != null">
            staffPositionId = #{staffPositionId},
        </if>
        <if test="storefrontId != null">
            storefrontId = #{storefrontId}
        </if>
        <where>
            staffId = #{staffId}
        </where>
    </update>
    <update id="updateStatusById" parameterType="com.beautifulharborbackstage.pojo.dto.StaffDTO">
        UPDATE
        staff
        SET
        <if test="status != null">
            status = #{status},
        </if>
        <if test="endDate != null and status != 1">
            endDate = #{endDate}
        </if>
        <if test="status == 1 and startDate != null">
            endDate = null,startDate = #{startDate}
        </if>
        <where>
            staffId = #{staffId}
        </where>
    </update>

</mapper>